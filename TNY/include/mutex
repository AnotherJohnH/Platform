//------------------------------------------------------------------------------
// Copyright (c) 2024 John D. Haughton
// SPDX-License-Identifier: MIT
//------------------------------------------------------------------------------

//! \brief tiny C++ library implementation

#pragma once

#include "MTL/Mutex.h"


namespace std {

class mutex
{
public:
   mutex() = default;

   void lock()
   {
      while(not try_lock());
   }

   bool try_lock()
   {
      return impl.try_lock();
   }

   void unlock()
   {
      impl.unlock();
   }

private:
   MTL::mutex impl;
};


template <typename MUTEX>
class lock_guard
{
public:
   lock_guard(MUTEX& mutex_)
      : mutex(mutex_)
   {
      mutex.lock();
   }

   ~lock_guard()
   {
      mutex.unlock();
   }

private:
   MUTEX& mutex;
};


} // namespace std

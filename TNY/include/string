//------------------------------------------------------------------------------
// Copyright (c) 2013 John D. Haughton
// SPDX-License-Identifier: MIT
//------------------------------------------------------------------------------

//! \brief tiny C library implementation

#pragma once

#include <cstddef>

namespace std {

//! TODO this is just a stub
class string
{
public:
   static const size_t npos = size_t(-1);

   using iterator = int;

   string() {}

   string(const char* s) {}

   string(const std::string& str) {}

   bool empty() const { return true; }

   size_t size() { return 0; }

   char operator[](size_t index) { return '\0'; }

   char back() const { return '\0'; }

   void pop_back() {}

   void push_back(char ch) {}

   char operator=(char ch)
   {
      return ch;
   }

   void operator+=(char ch)
   {
   }

   void operator+=(const char* ch)
   {
   }

   const char* c_str() const
   {
      return nullptr;
   }

   size_t find(char ch, size_t pos = 0) const
   {
      return npos;
   }

   iterator end()
   {
      return iterator();
   }

   void erase(iterator) {}

   bool operator==(const char*) { return false; }

   bool operator!=(const char*) { return true; }

   void operator+=(const std::string&) {}
};

} // namespace std

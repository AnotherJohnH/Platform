#-------------------------------------------------------------------------------
#  Copyright (c) 2017 John D. Haughton
# 
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
# 
#  The above copyright notice and this permission notice shall be included in
#  all copies or substantial portions of the Software.
# 
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#  SOFTWARE.
#-------------------------------------------------------------------------------

# scons configuration for Android (ARM) builds

import os

# See BUILD_ANDROID.env
NDK_HOME    = os.environ.get('NDK_HOME')
NDK_ARCH    = os.environ.get('NDK_ARCH')
NDK_API     = os.environ.get('NDK_API')
NDK_GCC_VER = os.environ.get('NDK_GCC_VER')

# ARMv7 builds
if NDK_ARCH == 'arm':
   PREFIX      = 'arm-linux-androideabi-'
   GCC_ARCH    = 'armv7-a'
   LIB_ARCH    = 'armeabi-v7a'

# ARMv8 builds
elif NDK_ARCH == 'arm64':
   PREFIX      = 'aarch64-linux-android-'
   GCC_ARCH    = 'armv8-a'
   LIB_ARCH    = 'arm64-v8a'

else:
   print('ERROR: Env var NDK_ARCH not recognoised or not set, see "BUILD_ANDROID.env"')
   Exit(1)

Import('env')

env['machine'] = GCC_ARCH

env['AS']        = PREFIX+'as'
env['CC']        = PREFIX+'gcc'
env['CXX']       = PREFIX+'g++'
env['LINK']      = PREFIX+'g++'
env['AR']        = PREFIX+'ar'
env['RANLIB']    = PREFIX+'ranlib'
env['OBJCOPY']   = PREFIX+'objcopy'
env['OBJDUMP']   = PREFIX+'objdump'
env['SIZE']      = PREFIX+'size'

env['OBJPREFIX'] = 'obj/'+GCC_ARCH+'/'
env['CCFLAGS']   = ['-Wall', '-march='+GCC_ARCH, '-fno-rtti']
env['CXXFLAGS']  = ['-std=c++11']
env['CPPPATH']   = \
   [NDK_HOME+'/sources/cxx-stl/gnu-libstdc++/'+NDK_GCC_VER+'/include',
    NDK_HOME+'/sources/cxx-stl/gnu-libstdc++/'+NDK_GCC_VER+'/libs/'+LIB_ARCH+'/include',
    NDK_HOME+'/platforms/android-'+NDK_API+'/arch-'+NDK_ARCH+'/usr/include']
env['LIBPATH']   = \
   [NDK_HOME+'/sources/cxx-stl/gnu-libstdc++/'+NDK_GCC_VER+'/libs/'+LIB_ARCH,
    NDK_HOME+'/platforms/android-'+NDK_API+'/arch-'+NDK_ARCH+'/usr/lib']
env['LIBS']      = ['supc++']
env['LINKFLAGS'] = ['--sysroot='+NDK_HOME+'/platforms/android-'+NDK_API+'/arch-'+NDK_ARCH,
                    '-march='+GCC_ARCH]


Import('source')

source+=[env.File('Audio.cpp'),
         env.File('Event.cpp'),
         env.File('Frame.cpp'),
         env.File('Image.cpp'),
         env.File('Sounder.cpp')]


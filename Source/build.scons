#-------------------------------------------------------------------------------
#  Copyright (c) 2017 John D. Haughton
# 
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
# 
#  The above copyright notice and this permission notice shall be included in
#  all copies or substantial portions of the Software.
# 
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#  SOFTWARE.
#-------------------------------------------------------------------------------

# Construct a target platform specific build environment

import os, sys
from subprocess import *

env = Environment(ENV = os.environ)

# Common platform defaults
env['TARSUFFIX'] = '.tgz'
env['platform_files'] = []

system  = os.uname()[0]
machine = os.uname()[4]

# Try and determine the host target from the system
system = os.uname()[0]
if system == 'Darwin':
   env['TARFLAGS']  = ['-c', '-z', '-h', '--exclude', '.DS_Store']
   target = 'macOS'
elif system == 'Linux':
   env['TARFLAGS']  = ['-c', '-z', '-h']
   target = 'Linux'
else:
   print 'ERROR: System "'+system+'" is not supported'
   Exit(1)

# Env var PROJ_TARGET overides default host target
if "PROJ_TARGET" in os.environ:
   target = os.environ.get('PROJ_TARGET')
   if target == 'Darwin':
      target = 'macOS'

if not os.path.isdir(target):
   print 'ERROR: Target platform "'+target+'" is not supported'
   Exit(1)

Import('app')
env['machine'] = machine
env['target']  = target
env['app']     = app

# Configure for the target platform
SConscript(target+'/config.scons', exports='env')

Import('version')
env.Append(CCFLAGS = '-DPROJ_VERSION=\\"'+version+'\\"')
env.Append(CCFLAGS = '-DPROJ_MACHINE_='+env['machine'])
env.Append(CCFLAGS = '-DPROJ_TARGET_'+target)

env.Append(CPPPATH = env.Dir('../include'))

# Add target sources to project sources
Import('source')
source+=[env.File(target+'/PLT/AudioOut.cpp'),
         env.File(target+'/PLT/Event.cpp'),
         env.File(target+'/PLT/Frame.cpp'),
         env.File(target+'/PLT/FrameBase.cpp'),
         env.File(target+'/PLT/Sounder.cpp'),
         env.File('STB/Option.cpp')]

# Return state to top level
Return('env')
